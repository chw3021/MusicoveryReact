{"version":3,"file":"static/js/725.2c892aff.chunk.js","mappings":"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","sources":["components/admin/AdminRedirectBox.js","pages/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/AdminRedirectBox.css\";\r\n\r\nconst AdminRedirectBox = () => {\r\n  const [showBox, setShowBox] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"MUSICOVERY_USER\"));\r\n    if (userData?.admin) {\r\n      setShowBox(true); // admin인 경우 팝업을 표시\r\n    }\r\n  }, []);\r\n\r\n  const handleNavigate = (path, closeBox = true) => {\r\n    if (closeBox) {\r\n      setShowBox(false); // 이동 후 팝업을 닫음\r\n    }\r\n    navigate(path);\r\n  };\r\n\r\n  if (!showBox) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"admin-box\">\r\n        <p>관리자 계정으로 로그인하셨습니다.</p>\r\n        <button onClick={() => handleNavigate(\"/\", true)}>홈으로 이동</button>\r\n        <button onClick={() => handleNavigate(\"/admin\", false)}>\r\n          관리자 페이지로 이동\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRedirectBox;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport Header from \"../components/common/Header\";\r\n// import OAuth from \"../components/auth/OAuth\";\r\n// import { logout } from \"../components/auth/auth\";\r\nimport \"../styles/Home.css\";\r\nimport \"animate.css\";\r\nimport AdminRedirectBox from \"../components/admin/AdminRedirectBox\";\r\nimport { Button } from \"@headlessui/react\";\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  // const [showOAuth, setShowOAuth] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentSection, setCurrentSection] = useState(0);\r\n  const totalSections = 3;\r\n  const scrollContainerRef = useRef(null);\r\n  const scrollCooldown = 1000; // 1초 쿨다운\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  let lastScrollTime = Date.now();\r\n  const [isShattering, setIsShattering] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"MUSICOVERY_USER\");\r\n    setIsLoggedIn(!!user);\r\n  }, []);\r\n\r\n  const transitionToSection = (sectionIndex) => {\r\n    if (currentSection !== sectionIndex) {\r\n      setIsAnimating(true);\r\n\r\n      // 첫 페이지에서 두번째 페이지로 넘어갈 때만 깨짐 효과 적용\r\n      if (currentSection === 0 && sectionIndex === 1) {\r\n        handlePageShatter(); // 페이지 깨짐 효과 실행\r\n\r\n        // 애니메이션 후에 실제 섹션 변경\r\n        setTimeout(() => {\r\n          setCurrentSection(sectionIndex);\r\n          setIsAnimating(false);\r\n        }, 1000); // 깨짐 애니메이션 지속 시간과 맞춤\r\n      } else if (currentSection === 1 && sectionIndex === 2) {\r\n        handlePageFlip(); // 페이지 뒤집힘 효과 실행\r\n\r\n        // 애니메이션 후에 실제 섹션 변경\r\n        setTimeout(() => {\r\n          setCurrentSection(sectionIndex);\r\n          setIsAnimating(false);\r\n        }, 1000); // 뒤집힘 애니메이션 지속 시간과 맞춤\r\n      } else {\r\n        // 다른 페이지 전환에서는 즉시 전환 (또는 다른 효과 적용)\r\n        setCurrentSection(sectionIndex);\r\n        createWaveEffect();\r\n        setTimeout(() => {\r\n          setIsAnimating(false);\r\n        }, 500); // 일반 전환은 더 짧은 시간\r\n      }\r\n    }\r\n  };\r\n\r\n  // 페이지 깨짐 효과 함수\r\n  const handlePageShatter = () => {\r\n    setIsShattering(true);\r\n    const scrollContainer = scrollContainerRef.current;\r\n    if (scrollContainer) {\r\n      scrollContainer.classList.add(\"shattering\");\r\n      scrollContainer.classList.add(\"explosion\"); // explosion 애니메이션 클래스 추가\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setIsShattering(false);\r\n      if (scrollContainer) {\r\n        scrollContainer.classList.remove(\"shattering\");\r\n        scrollContainer.classList.remove(\"explosion\"); // 애니메이션 클래스 제거\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  // 페이지 뒤집힘 효과 함수\r\n  const handlePageFlip = () => {\r\n    const container = document.createElement(\"div\");\r\n    container.className = \"page-transition-container\";\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      const piece = document.createElement(\"div\");\r\n      piece.className = \"page-piece\";\r\n      container.appendChild(piece);\r\n    }\r\n\r\n    document.body.appendChild(container);\r\n\r\n    setTimeout(() => {\r\n      document.body.removeChild(container);\r\n    }, 1000); // 애니메이션 시간과 일치시킴\r\n  };\r\n\r\n  // 휠 이벤트 처리 함수\r\n  const createWaveEffect = () => {\r\n    const wave = document.createElement(\"div\");\r\n    wave.className = \"wave-effect\";\r\n    document.body.appendChild(wave);\r\n    setTimeout(() => {\r\n      wave.remove();\r\n    }, 2000); // 애니메이션 시간보다 약간 더 길게 설정\r\n  };\r\n\r\n  // 개선된 조각 생성 함수\r\n  const createShatterPieces = () => {\r\n    const pieces = [];\r\n    const numPieces = 900; // 더 많은 조각들\r\n\r\n    // 화면 크기 기준으로 조각들 생성\r\n    const screenWidth = window.innerWidth;\r\n    const screenHeight = window.innerHeight;\r\n\r\n    for (let i = 0; i < numPieces; i++) {\r\n      // 화면 전체에 랜덤하게 배치\r\n      const startX = Math.random() * screenWidth;\r\n      const startY = Math.random() * screenHeight;\r\n\r\n      // 바깥쪽으로 퍼지는 움직임 계산\r\n      const centerX = screenWidth / 2;\r\n      const centerY = screenHeight / 2;\r\n\r\n      // 중앙에서 바깥쪽으로 향하는 벡터 계산\r\n      const dirX = startX - centerX;\r\n      const dirY = startY - centerY;\r\n\r\n      // 거리에 비례하는 이동 거리 계산\r\n      const distance = Math.sqrt(dirX * dirX + dirY * dirY);\r\n      const normalizedDirX = dirX / distance;\r\n      const normalizedDirY = dirY / distance;\r\n\r\n      const moveX = normalizedDirX * (300 + Math.random() * 500);\r\n      const moveY = normalizedDirY * (300 + Math.random() * 500);\r\n\r\n      // 랜덤 회전\r\n      const randomRotation = Math.random() * 720 - 360;\r\n\r\n      // 랜덤 색상 클래스\r\n      const colorClass = `color${Math.floor(Math.random() * 4) + 1}`;\r\n\r\n      pieces.push(\r\n        <div\r\n          key={i}\r\n          className={`shatter-piece ${colorClass}`}\r\n          style={{\r\n            left: `${startX}px`,\r\n            top: `${startY}px`,\r\n            width: `${10 + Math.random() * 40}px`, // 다양한 크기\r\n            height: `${10 + Math.random() * 40}px`,\r\n            \"--x\": `${moveX}px`,\r\n            \"--y\": `${moveY}px`,\r\n            \"--r\": `${randomRotation}deg`,\r\n            animationDuration: `${0.8 + Math.random() * 0.4}s`, // 조금씩 다른 애니메이션 속도\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return pieces;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleWheel = (e) => {\r\n      if (isAnimating) return;\r\n      const now = Date.now();\r\n      if (now - lastScrollTime < scrollCooldown) return;\r\n\r\n      if (e.deltaY > 0 && currentSection < totalSections - 1) {\r\n        transitionToSection(currentSection + 1);\r\n      } else if (e.deltaY < 0 && currentSection > 0) {\r\n        transitionToSection(currentSection - 1);\r\n      }\r\n      lastScrollTime = now;\r\n    };\r\n\r\n    const scrollContainer = scrollContainerRef.current;\r\n    scrollContainer.addEventListener(\"wheel\", handleWheel);\r\n\r\n    return () => {\r\n      scrollContainer.removeEventListener(\"wheel\", handleWheel);\r\n    };\r\n  }, [currentSection, totalSections, isAnimating]);\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = scrollContainerRef.current;\r\n    scrollContainer.style.transform = `translateX(-${currentSection * 100}vw)`;\r\n\r\n    const progressText = document.querySelector(\".progress-text\");\r\n    const progressFill = document.querySelector(\".progress-fill\");\r\n\r\n    progressText.textContent = `0${currentSection + 1}/0${totalSections}`;\r\n    progressFill.style.width = `${\r\n      ((currentSection + 1) / totalSections) * 100\r\n    }%`;\r\n  }, [currentSection, totalSections]);\r\n\r\n  // const handleLoginClick = () => {\r\n  //   setShowOAuth(true);\r\n  // };\r\n\r\n  const goToPlaylist = () => {\r\n    navigate(\"/PlaylistPage\");\r\n  };\r\n\r\n  const goToLogin = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const goToSignup = () => {\r\n    navigate(\"/Signup\");\r\n  };\r\n\r\n  const handlePrevClick = () => {\r\n    if (currentSection > 0) {\r\n      transitionToSection(currentSection - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    if (currentSection < totalSections - 1) {\r\n      transitionToSection(currentSection + 1);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"home-container\">\r\n      <Header />\r\n      <AdminRedirectBox />\r\n      <div className=\"home-scroll-container\" ref={scrollContainerRef}>\r\n        <section\r\n          className={`section hero-section hero ${\r\n            isShattering ? \"shattering\" : \"\"\r\n          }`}\r\n          data-index=\"0\"\r\n        >\r\n          <div className=\"hero-content \">\r\n            <h1 className=\"hero-title\">Discover Your Sound</h1>\r\n            <p className=\"hero-subtitle\">\r\n              Personalized playlists curated just for you, based on your unique\r\n              taste in music.\r\n            </p>\r\n            {!isLoggedIn ? (\r\n              <>\r\n                <button className=\"cta-button\" onClick={goToLogin}>\r\n                  로그인\r\n                </button>\r\n                <button className=\"cta-button\" onClick={goToSignup}>\r\n                  회원가입\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button className=\"cta-button\" onClick={goToPlaylist}>\r\n                  내 플레이리스트\r\n                </button>\r\n              </>\r\n            )}\r\n            {/* <button className=\"cta-button\" onClick={handleLoginClick}>\r\n              임시 로그인(스포티파이로 로그인)\r\n            </button> */}\r\n            {/* <button className=\"cta-button\" onClick={adminLoginClick}>\r\n              임시 관리자페이지\r\n            </button> */}\r\n\r\n            {/* {showOAuth && <OAuth />} */}\r\n          </div>\r\n        </section>\r\n        <section className={`section`} data-index=\"1\">\r\n          <h2 className=\"section-title\">Trending Playlists</h2>\r\n          <div className=\"playlists-container\">\r\n            <div className=\"playlist-card\"></div>\r\n            <div className=\"playlist-card\"></div>\r\n            <div className=\"playlist-card\"></div>\r\n          </div>\r\n        </section>\r\n        <section className=\"section\" data-index=\"2\">\r\n          <h2 className=\"section-title\">New Releases</h2>\r\n          <div className=\"playlists-container\">\r\n            <div className=\"playlist-card\"></div>\r\n            <div className=\"playlist-card\"></div>\r\n            <div className=\"playlist-card\"></div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div className=\"scroll-nav\"></div>\r\n\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress-text\">01/03</div>\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress-fill\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"nav-arrow prev\" onClick={handlePrevClick}>\r\n        <div className=\"arrow-icon\"></div>\r\n      </div>\r\n      <div className=\"nav-arrow next\" onClick={handleNextClick}>\r\n        <div className=\"arrow-icon\"></div>\r\n      </div>\r\n\r\n      <div className=\"shatter-effect-container\">\r\n        <div className={`shatter-effect ${isShattering ? \"active\" : \"\"}`}>\r\n          {isShattering && createShatterPieces()}\r\n        </div>\r\n      </div>\r\n\r\n      <canvas className=\"slice-canvas\"></canvas>\r\n\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["AdminRedirectBox","showBox","setShowBox","useState","navigate","useNavigate","useEffect","userData","JSON","parse","localStorage","getItem","admin","handleNavigate","path","arguments","length","undefined","_jsx","className","children","_jsxs","onClick","Home","isLoggedIn","setIsLoggedIn","currentSection","setCurrentSection","scrollContainerRef","useRef","isAnimating","setIsAnimating","lastScrollTime","Date","now","isShattering","setIsShattering","user","transitionToSection","sectionIndex","handlePageShatter","setTimeout","handlePageFlip","createWaveEffect","scrollContainer","current","classList","add","remove","container","document","createElement","i","piece","appendChild","body","removeChild","wave","handleWheel","e","deltaY","totalSections","addEventListener","removeEventListener","style","transform","progressText","querySelector","progressFill","textContent","width","Header","ref","_Fragment","goToPlaylist","goToLogin","goToSignup","handlePrevClick","handleNextClick","createShatterPieces","pieces","screenWidth","window","innerWidth","screenHeight","innerHeight","startX","Math","random","startY","dirX","dirY","distance","sqrt","normalizedDirY","moveX","moveY","randomRotation","colorClass","floor","push","left","top","height","animationDuration","Outlet"],"sourceRoot":""}
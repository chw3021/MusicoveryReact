{"version":3,"file":"static/js/797.8a608e10.chunk.js","mappings":"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","sources":["components/social/CustomerSupport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport useUserInfo from \"../../hooks/useUserInfo\";\r\nimport \"../../styles/CustomerSupport.css\";\r\n\r\nconst CustomerSupport = () => {\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [inquiries, setInquiries] = useState([]);\r\n    const [expandedInquiries, setExpandedInquiries] = useState({}); // 답변 표시 상태 관리\r\n    const userInfo = useUserInfo();\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            fetchInquiries();\r\n        }\r\n    }, [userInfo]);\r\n\r\n    const fetchInquiries = async () => {\r\n        try {\r\n            const response = await axiosInstance.get(`/customersupport/inquiries?userId=${userInfo.id}`);\r\n            setInquiries(response.data);\r\n        } catch (error) {\r\n            console.error(\"문의사항 목록을 가져오는 데 실패했습니다.\", error);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (!userInfo) {\r\n                alert(\"로그인이 필요합니다.\");\r\n                return;\r\n            }\r\n\r\n            const data = {\r\n                userId: userInfo.id,\r\n                question: question,\r\n            };\r\n\r\n            const response = await axiosInstance.post(\"/customersupport/inquiry\", data);\r\n            console.log(\"문의사항 제출 성공:\", response.data);\r\n            alert(\"문의사항이 정상적으로 제출되었습니다.\");\r\n            setQuestion(\"\");\r\n            fetchInquiries(); // 문의사항 제출 후 목록 갱신\r\n        } catch (error) {\r\n            console.error(\"문의사항 제출 실패:\", error);\r\n            alert(\"문의사항 제출에 실패했습니다.\");\r\n        }\r\n    };\r\n\r\n    // 문의사항 클릭 이벤트 처리\r\n    const toggleResponse = (inquiryId) => {\r\n        setExpandedInquiries(prev => ({\r\n            ...prev,\r\n            [inquiryId]: !prev[inquiryId]\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"customer-support-container\">\r\n            <h1>문의사항</h1>\r\n            <form onSubmit={handleSubmit} className=\"customer-support-form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"question\">문의 내용:</label>\r\n                    <textarea\r\n                        id=\"question\"\r\n                        value={question}\r\n                        onChange={(e) => setQuestion(e.target.value)}\r\n                        rows=\"5\"\r\n                        cols=\"50\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"submit-button\">문의사항 제출</button>\r\n            </form>\r\n\r\n            <div className=\"inquiry-list-container\">\r\n                <h2>내 문의사항 목록</h2>\r\n                <div className=\"inquiry-list\">\r\n                    {inquiries.map((inquiry) => (\r\n                        <div key={inquiry.id} className=\"inquiry-item\">\r\n                            <div \r\n                                className=\"inquiry-item-content\"\r\n                                onClick={() => toggleResponse(inquiry.id)}\r\n                                style={{ cursor: 'pointer' }}\r\n                            >\r\n                                <div className=\"inquiry-item-content-item\"><strong>문의 내용:</strong> {inquiry.question}</div>\r\n                                <div className=\"inquiry-item-content-item\"><strong>작성일:</strong> {new Date(inquiry.createdAt).toLocaleString()}</div>\r\n                                {inquiry.response ? (\r\n                                    <div className=\"inquiry-item-toggle-hint\">\r\n                                        {expandedInquiries[inquiry.id] ? '▲ 답변 숨기기' : '▼ 답변 보기'}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"inquiry-item-toggle-hint\">답변 대기 중</div>\r\n                                )}\r\n                            </div>\r\n                            {inquiry.response && expandedInquiries[inquiry.id] && (\r\n                                <div className=\"inquiry-item-content-response\">\r\n                                    <p><strong>답변:</strong> {typeof inquiry.response === \"string\" ? JSON.parse(inquiry.response).response : inquiry.response}</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerSupport;"],"names":["CustomerSupport","question","setQuestion","useState","inquiries","setInquiries","expandedInquiries","setExpandedInquiries","userInfo","useUserInfo","useEffect","fetchInquiries","async","response","axiosInstance","get","id","data","error","console","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","alert","userId","post","log","htmlFor","value","onChange","target","rows","cols","required","type","map","inquiry","onClick","toggleResponse","inquiryId","prev","style","cursor","Date","createdAt","toLocaleString","JSON","parse"],"sourceRoot":""}
{"version":3,"file":"static/js/267.1d499290.chunk.js","mappings":"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","sources":["components/social/UserReport.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport \"../../styles/UserReport.css\";\r\nimport Header from \"../common/Header\";\r\nimport useUserInfo from \"../../hooks/useUserInfo\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\"; // useNavigate 추가\r\n\r\nconst UserReport = () => {\r\n    const [reports, setReports] = useState([]);\r\n    const [reportedUserId, setReportedUserId] = useState(\"\");\r\n    const [reportReason, setReportReason] = useState(\"\");\r\n    const [customReason, setCustomReason] = useState(\"\"); // 자유 입력을 위한 상태\r\n    const userInfo = useUserInfo();\r\n    const location = useLocation();\r\n    const navigate = useNavigate(); // useNavigate 훅 추가\r\n    const [reportedPost, setReportedPost] = useState(null);\r\n\r\n    // 신고 대상 유저 정보 가져오기\r\n    useEffect(() => {\r\n        if (location.state && location.state.reportedPost) {\r\n            setReportedUserId(location.state.reportedPost.user.id);\r\n            setReportedPost(location.state.reportedPost);\r\n        }\r\n    }, [location.state]);\r\n\r\n    // 신고 내역 가져오기\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            fetchReports(userInfo.id);\r\n        }\r\n    }, [userInfo]);\r\n\r\n    const fetchReports = async (userId) => {\r\n        try {\r\n            const response = await axiosInstance.get(\"/api/userreport/reporter/\" + userId);\r\n            console.log(\"신고 내역:\", response.data);\r\n            \r\n            setReports(response.data || []); // 응답 데이터가 배열이 아닌 경우 빈 배열로 초기화\r\n        } catch (error) {\r\n            console.error(\"신고 내역을 불러오는 중 오류 발생:\", error);\r\n            setReports([]); // 오류 발생 시 빈 배열로 초기화\r\n        }\r\n    };\r\n\r\n    // 신고 제출하기\r\n    const handleReportSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!reportedUserId) {\r\n            alert(\"신고할 사용자 ID를 입력하세요.\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axiosInstance.post(\"/api/userreport/report\", {\r\n                reporterId: userInfo.id,\r\n                reportedUserId: reportedUserId,\r\n                reason: reportReason === \"직접입력\" ? customReason : reportReason, // 직접입력일 때만 customReason 사용\r\n                postId: reportedPost.id // 신고된 게시글 ID 추가\r\n            });\r\n            alert(\"신고가 접수되었습니다.\");\r\n            // 신고 접수 후 PostPage로 이동\r\n            navigate(\"/post\"); // 게시판 페이지로 이동\r\n        } catch (error) {\r\n            console.error(\"신고 중 오류 발생:\", error);\r\n            alert(\"신고 접수 중 오류가 발생했습니다.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"user-report-container\">\r\n                <h2>신고하기</h2>\r\n                <form onSubmit={handleReportSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"신고할 사용자 ID\"\r\n                        value={location.state.reportedPost.user.nickname}\r\n                        onChange={(e) => setReportedUserId(e.target.value)}\r\n                        required\r\n                        disabled\r\n                    />\r\n                    \r\n                    {reportedPost && (\r\n                        <div className=\"reported-post-info\">\r\n                            <p><strong>제목:</strong> {reportedPost.title}</p>\r\n                            <p><strong>내용:</strong> {reportedPost.description}</p>\r\n                        </div>\r\n                    )}\r\n                    <input\r\n                        type=\"text\"\r\n                        list=\"reportReasonsList\"\r\n                        placeholder=\"신고 사유를 입력하세요\"\r\n                        value={reportReason}\r\n                        onChange={(e) => setReportReason(e.target.value)}\r\n                        required\r\n                    />\r\n                    <datalist id=\"reportReasonsList\">\r\n                        <option value=\"스팸\" />\r\n                        <option value=\"욕설 및 부적절한 내용\" />\r\n                        <option value=\"괴롭힘\" />\r\n                        <option value=\"사기\" />\r\n                        <option value=\"직접입력\" /> {/* '직접입력' 옵션 추가 */}\r\n                    </datalist>\r\n\r\n                    {/* 자유 입력 필드 */}\r\n                    {reportReason === \"직접입력\" && (\r\n                        <>\r\n                            <label htmlFor=\"customReason\">기타 사유 (자유 입력)</label>\r\n                            <textarea\r\n                                id=\"customReason\"\r\n                                placeholder=\"자유롭게 신고 사유를 입력하세요.\"\r\n                                value={customReason}\r\n                                onChange={(e) => setCustomReason(e.target.value)}\r\n                                rows=\"4\" // 텍스트 영역의 높이\r\n                            />\r\n                        </>\r\n                    )}\r\n\r\n                    <button className=\"reportbutton\" type=\"submit\">신고 제출</button>\r\n                </form>\r\n\r\n                <h2>신고 내역</h2>\r\n                <ul className=\"report-list-ulist\">\r\n                    {Array.isArray(reports) && reports.map((report) => (\r\n                        <li className=\"report-list-list\" key={report.id}>\r\n                            <div className=\"report-list-item\">\r\n                                <strong>사용자: {report.reportedUserNickname}</strong>\r\n                                {report.postTitle && (\r\n                                    <p><strong>게시글 제목:</strong> {report.postTitle}</p>\r\n                                )}\r\n                                <strong> 사유: {report.reason}</strong>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserReport;"],"names":["UserReport","reports","setReports","useState","reportedUserId","setReportedUserId","reportReason","setReportReason","customReason","setCustomReason","userInfo","useUserInfo","location","useLocation","navigate","useNavigate","reportedPost","setReportedPost","useEffect","state","user","id","fetchReports","async","response","axiosInstance","get","userId","console","log","data","error","_jsxs","children","_jsx","Header","className","onSubmit","e","preventDefault","post","reporterId","reason","postId","alert","type","placeholder","value","nickname","onChange","target","required","disabled","title","description","list","_Fragment","htmlFor","rows","Array","isArray","map","report","reportedUserNickname","postTitle"],"sourceRoot":""}